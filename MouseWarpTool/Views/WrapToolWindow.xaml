<Window x:Class="MouseWarpTool.Views.WrapToolWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:MouseWarpTool.Views"
        xmlns:msg="clr-namespace:MouseWarpTool.Messages"
        xmlns:bhv="clr-namespace:MouseWarpTool.Views.Behavior"
        mc:Ignorable="d"
        Name="Window"
        ShowInTaskbar="False"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"      
        Topmost="True"
        Opacity="0"
        Title="WrapToolWindow" Height="300" Width="300">

    <Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation Duration="00:00:0.1" Storyboard.TargetProperty="Opacity" To="1" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <l:LivetCallMethodAction MethodName="OnClose" MethodTarget="{Binding Mode=OneWay}"/>
        </i:EventTrigger>
        <l:InteractionMessageTrigger MessageKey="CloneWindow" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" WindowType="{x:Type v:CloneWindow}" />
        </l:InteractionMessageTrigger>
        <l:InteractionMessageTrigger MessageKey="ScreenHintOpenCommand" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" WindowType="{x:Type v:ScreenHintWindow}" />
        </l:InteractionMessageTrigger>
        <l:InteractionMessageTrigger MessageKey="CloseMessage" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction  InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>
        <l:InteractionMessageTrigger MessageKey="ResizeMessage" Messenger="{Binding Messenger}">
            <msg:WindowStateAction InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>
        <l:InteractionMessageTrigger MessageKey="MouseMoveMessage" Messenger="{Binding Messenger}">
            <msg:MouseMoveAction InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>
        <l:InteractionMessageTrigger MessageKey="MouseClipMessage" Messenger="{Binding Messenger}">
            <msg:WindowCkipAction InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <StackPanel>
            <ItemsControl ItemsSource="{Binding ListCollection}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Content="{Binding DisplayName}" Command="{Binding Command}" Height="{Binding ButtonHeight}">
                            <i:Interaction.Behaviors>
                                <bhv:MouseStateBehavior EnterCommand="{Binding ScreenHintOpenCommand}" LeaveCommand="{Binding ScreenHintCloseCommand}"/>
                            </i:Interaction.Behaviors>
                        </Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
    </Grid>
</Window>
